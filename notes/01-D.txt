# 算法分析

运用DSA

算法分析的两个任务
> * 正确性(不变性 * 单调性)
> * 复杂度增长速度表格

C++等高级语言的基本指令，等效于常数条RAM的基本指令；渐进意义下，相当
  分支转向：goto   // 算法灵魂；出于结构考虑，被隐藏
  迭代循环:for(), while()..   // 本质上 "if+goto"
  调用+递归                   // 本质上也是 "goto"

复杂度分析方法:
> 1. 迭代: 级数求和
> 2. 递归: 递归跟踪 + 递推方程
> 猜测 + 验证

# 级数

## 算术级数：与**末项平方**同阶

## 幂方级数：比幂次高出一阶

## 几何级数（a > 1）:与末项同阶

## 收敛级数:O(1)

## 未必收敛，但长度有限
h(n) = 1 + 1/2 + 1/3 + ... + 1/n = O(logn)            // 调和级数
log1 + log2 + log3 + ... + logn = log(n!) = O(nlogn)  // 对数级数


## 循环 vs 级数
